// Mocks generated by Mockito 5.2.0 from annotations
// in projeto_pvd/test/src/comanda_module/external/repositories/create_comanda_repository_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:projeto_pvd/src/comanda_module/infra/infra.dart' as _i2;

import 'create_comanda_repository_test.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeComandaCM_0 extends _i1.Fake implements _i2.ComandaCM {}

/// A class which mocks [IComandaDatasouce].
///
/// See the documentation for Mockito's code generation for more information.
class MockIComandaDatasouce extends _i1.Mock implements _i3.IComandaDatasouce {
  MockIComandaDatasouce() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<void> create(_i2.ComandaCM? data) =>
      (super.noSuchMethod(Invocation.method(#create, [data]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  _i4.Future<void> delete(int? id) =>
      (super.noSuchMethod(Invocation.method(#delete, [id]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  _i4.Future<void> update(_i2.ComandaCM? data) =>
      (super.noSuchMethod(Invocation.method(#update, [data]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  _i4.Future<List<_i2.ComandaCM>> read() =>
      (super.noSuchMethod(Invocation.method(#read, []),
              returnValue: Future<List<_i2.ComandaCM>>.value(<_i2.ComandaCM>[]))
          as _i4.Future<List<_i2.ComandaCM>>);
  @override
  _i4.Future<_i2.ComandaCM> readById(int? id) =>
      (super.noSuchMethod(Invocation.method(#readById, [id]),
              returnValue: Future<_i2.ComandaCM>.value(_FakeComandaCM_0()))
          as _i4.Future<_i2.ComandaCM>);
}
